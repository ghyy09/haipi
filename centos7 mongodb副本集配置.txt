CentOS7  mongodb 副本集配置
master(192.168.2.21)
#创建所需目录
mkdir -p /app/mongodb/{logs,conf,data,key}

#生成key文件(安全配置需要)
openssl  rank -base64 741 > /app/mongodb/key/mongodb.key
chmod 600 /app/mongodb/key/mongodb.key

mongodb.conf
# log
logpath = /app/mongodb/logs/mongodb.log
logappend = true

# process Manage
pidfilepath = /app/mongodb/mongodb.pid
fork = true

# net
port = 27017
bind_ip = 192.168.2.21,127.0.0.1

#storage
dbpath = /app/mongodb/data/
journal = true
directoryperdb = true

#replset
replSet = haipi
oplogSize = 10240

#security
#auth = true  
#keyFile = /app/mongodb/key/mongodb.key



mongod -f /app/mongodb/conf/mongodb.conf







slave(192.168.2.22)
#创建所需目录
mkdir -p /app/mongodb/{logs,conf,data,key}
scp root@192.168.2.21:/app/mongodb/key/mongodb.key /app/mongodb/key/
chmod 600 /app/mongodb/key/mongodb.key

mongodb.conf
# log
logpath = /app/mongodb/logs/mongodb.log
logappend = true

# process Manage
pidfilepath = /app/mongodb/mongodb.pid
fork = true

# net
port = 27017
bind_ip = 192.168.2.22,127.0.0.1

#storage
dbpath = /app/mongodb/data/
journal = true
directoryperdb = true

#replset
replSet = haipi
oplogSize = 10240

#security
#auth = true  
#keyFile = /app/mongodb/key/mongodb.key


mongod -f /app/mongodb/conf/mongodb.conf



#master上操作:

mongo 192.168.2.21:27017

config = { _id:"haipi", members:[
... {_id:0,host:"192.168.2.21:27017"},
... {_id:1,host:"192.168.2.22:27017"}]
... }
rs.initiate(config)  #初始化配置
rs.conf()   #查看配置
rs.addArb('192.168.2.22:27018')  #添加仲裁节点
rs.conf()
rs.status()  #查看主副节点状态

#从节点只读需要操作
rs.slaveOk()

安全配置需要先创建admin数据库的账号权限再开启安全配置登录的时候用
mongo  ip:port/admin -u user -p登录

db.createUser(

  {

    user: "root",

	pwd: "MDb2018@haiya",

    roles: [ { role: "root", db: "admin" } ]

  }

)


P primary    S secondary   A arbiter  关闭命令  db.shutdownserver()  只能连接127.0.0.1才能使用此命令
关闭顺序   SAP                  
开启顺序   PSA
   
